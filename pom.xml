<?xml version="1.0" encoding="UTF-8"?>
<!--

Copyright (c) 2000-2023, Board of Trustees of Leland Stanford Jr. University

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

1. Redistributions of source code must retain the above copyright notice,
this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright notice,
this list of conditions and the following disclaimer in the documentation
and/or other materials provided with the distribution.

3. Neither the name of the copyright holder nor the names of its contributors
may be used to endorse or promote products derived from this software without
specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.lockss</groupId>
    <artifactId>lockss-parent-pom</artifactId>
    <version>1.17.0-SNAPSHOT</version>
    <relativePath />
  </parent>

  <groupId>org.lockss.laaws</groupId>
  <artifactId>lockss-core</artifactId>
  <version>2.9.0-SNAPSHOT</version>
  <packaging>jar</packaging>
  
  <name>lockss-core</name>
  <description>The Slimmed Down LOCKSS Daemon Core</description>

  <properties>
    <!-- Needs to export its tests JAR -->
    <build.java.jarTests.skip>false</build.java.jarTests.skip>
    <!-- Needs lockss-legacy repository for lockss-plugins -->
    <repository.enabled.lockss-legacy>true</repository.enabled.lockss-legacy>

    <skipStf>true</skipStf><!-- alias -->
    <build.java.runStf.skip>${skipStf}</build.java.runStf.skip><!-- property -->

    <stfSuite>simpleV3Tests</stfSuite><!-- alias -->
    <build.java.runStf.suite>${stfSuite}</build.java.runStf.suite><!-- property -->

    <dir.apidocs>${project.reporting.outputDirectory}/apidocs</dir.apidocs>

    <!-- Log level for tool invocations (PluginPackager, EmptyDbCreator,
         ParamDoc, etc.) -->
    <loglevel.tool>${loglevel}</loglevel.tool>

    <graalvm.version>23.1.2</graalvm.version>
  </properties>

  <dependencies>

    <!-- lockss-util should be first to ensure that its choice of logging
	 providers and its log4j2.xml config file take precedence. -->
    <dependency>
      <groupId>org.lockss</groupId>
      <artifactId>lockss-util-core</artifactId>
      <version>${version.lockss.lockss-util-core}</version>
    </dependency>

    <dependency>
      <groupId>org.lockss</groupId>
      <artifactId>lockss-util-core</artifactId>
      <version>${version.lockss.lockss-util-core}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.lockss</groupId>
      <artifactId>lockss-util-entities</artifactId>
      <version>${version.lockss.lockss-util-entities}</version>
    </dependency>

    <dependency>
      <groupId>org.lockss</groupId>
      <artifactId>lockss-util-rest</artifactId>
      <version>${version.lockss.lockss-util-rest}</version>
    </dependency>

    <dependency>
      <groupId>org.lockss</groupId>
      <artifactId>lockss-util-rest</artifactId>
      <version>${version.lockss.lockss-util-rest}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.lockss</groupId>
      <artifactId>lockss-junit4-bundle</artifactId>
      <version>${version.lockss.lockss-junit4-bundle}</version>
      <type>pom</type>
      <scope>test</scope>
    </dependency>
    
    <dependency>
      <groupId>org.mozilla</groupId>
      <artifactId>rhino</artifactId>
      <version>1.7.14</version>
    </dependency>
    
    <dependency>
      <groupId>org.apache.derby</groupId>
      <artifactId>derby</artifactId>
      <version>${version.group.derby}</version>
    </dependency>
    
    <dependency>
      <groupId>org.apache.derby</groupId>
      <artifactId>derbyclient</artifactId>
      <version>${version.group.derby}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.derby</groupId>
      <artifactId>derbynet</artifactId>
      <version>${version.group.derby}</version>
    </dependency>

    <dependency>
      <groupId>javax.activation</groupId>
      <artifactId>activation</artifactId>
      <version>${version.dependency.activation}</version>
    </dependency>

    <dependency>
      <groupId>castor</groupId>
      <artifactId>castor</artifactId>
      <version>${version.dependency.castor}</version>
    </dependency>

    <dependency>
      <groupId>xerces</groupId>
      <artifactId>xercesImpl</artifactId>
      <version>2.12.2</version>
    </dependency>

    <dependency>
      <groupId>xml-apis</groupId>
      <artifactId>xml-apis</artifactId>
      <version>1.4.01</version>
    </dependency>

    <dependency>
      <groupId>xalan</groupId>
      <artifactId>xalan</artifactId>
      <version>2.7.3</version>
    </dependency>

    <dependency>
      <groupId>xalan</groupId>
      <artifactId>serializer</artifactId>
      <version>2.7.3</version>
    </dependency>

    <dependency>
      <groupId>xml-resolver</groupId>
      <artifactId>xml-resolver</artifactId>
      <version>1.2</version>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-dbcp2</artifactId>
      <version>${version.dependency.commons-dbcp2}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-text</artifactId>
      <version>${version.dependency.commons-text}</version>
    </dependency>

    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>${version.dependency.commons-lang}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>${version.dependency.commons-lang3}</version>
    </dependency>

    <dependency>
      <groupId>commons-primitives</groupId>
      <artifactId>commons-primitives</artifactId>
      <version>${version.dependency.commons-primitives}</version>
    </dependency>

    <dependency>
      <groupId>commons-cli</groupId>
      <artifactId>commons-cli</artifactId>
      <version>${version.dependency.commons-cli}</version>
    </dependency>

    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
      <version>${version.dependency.commons-collections}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-collections4</artifactId>
      <version>${version.dependency.commons-collections4}</version>
    </dependency>

    <dependency>
      <groupId>commons-configuration</groupId>
      <artifactId>commons-configuration</artifactId>
      <version>${version.dependency.commons-configuration}</version>
    </dependency>

    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <version>${version.dependency.commons-logging}</version>
    </dependency>

    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>${version.dependency.commons-codec}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-compress</artifactId>
      <version>${version.dependency.commons-compress}</version>
    </dependency>

    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${version.dependency.commons-io}</version>
    </dependency>

    <dependency>
      <groupId>commons-jxpath</groupId>
      <artifactId>commons-jxpath</artifactId>
      <version>${version.dependency.commons-jxpath}</version>
    </dependency>

    <dependency>
      <groupId>commons-beanutils</groupId>
      <artifactId>commons-beanutils</artifactId>
      <version>${version.dependency.commons-beanutils}</version>
    </dependency>

    <dependency>
      <groupId>commons-validator</groupId>
      <artifactId>commons-validator</artifactId>
      <version>${version.dependency.commons-validator}</version>
    </dependency>

    <dependency>
      <groupId>com.googlecode.gettext-commons</groupId>
      <artifactId>gettext-commons</artifactId>
      <version>0.9.8</version>
    </dependency>

    <dependency>
      <groupId>org.fedorahosted.tennera</groupId>
      <artifactId>ant-gettext</artifactId>
      <version>0.9</version>
    </dependency>

    <dependency>
      <groupId>de.schlichtherle.truezip</groupId>
      <artifactId>truezip-driver-file</artifactId>
      <version>${version.group.truezip}</version>
    </dependency>

    <dependency>
      <groupId>de.schlichtherle.truezip</groupId>
      <artifactId>truezip-driver-tar</artifactId>
      <version>${version.group.truezip}</version>
    </dependency>
    
    <dependency>
      <groupId>de.schlichtherle.truezip</groupId>
      <artifactId>truezip-driver-zip</artifactId>
      <version>${version.group.truezip}</version>
      <exclusions>
        <exclusion>
          <groupId>org.bouncycastle</groupId>
          <artifactId>bcprov-jdk15on</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    
    <dependency>
      <groupId>de.schlichtherle.truezip</groupId>
      <artifactId>truezip-file</artifactId>
      <version>${version.group.truezip}</version>
    </dependency>
    
    <dependency>
      <groupId>de.schlichtherle.truezip</groupId>
      <artifactId>truezip-kernel</artifactId>
      <version>${version.group.truezip}</version>
    </dependency>
    
    <dependency>
      <groupId>de.schlichtherle.truezip</groupId>
      <artifactId>truezip-swing</artifactId>
      <version>${version.group.truezip}</version>
    </dependency>
    
    <dependency>
      <groupId>javatar</groupId>
      <artifactId>javatar</artifactId>
      <version>2.5</version>
    </dependency>
    
    <dependency>
      <groupId>concurrent</groupId>
      <artifactId>concurrent</artifactId>
      <version>1.3.4</version>
    </dependency>
    
    <dependency>
      <groupId>org.lockss.legacy</groupId>
      <artifactId>org-htmlparser</artifactId>
      <version>1.6-p2</version>
    </dependency>
    
    <dependency>
      <groupId>org.jsoup</groupId>
      <artifactId>jsoup</artifactId>
      <version>${version.dependency.jsoup}</version>
    </dependency>
    
    <dependency>
      <groupId>org.jboss.apiviz</groupId>
      <artifactId>apiviz</artifactId>
      <version>1.3.2.GA</version>
    </dependency>
    
    <dependency>
      <groupId>org.lockss.legacy</groupId>
      <artifactId>com-sun-jimi-pro</artifactId>
      <version>1.0.0-p1</version>
    </dependency>
    
    <dependency>
      <groupId>org.lockss.legacy</groupId>
      <artifactId>edu-stanford-db-rdf-api</artifactId>
      <version>2001-01-19-p1</version>
    </dependency>

    <dependency>
      <groupId>com.thoughtworks.xstream</groupId>
      <artifactId>xstream</artifactId>
       <version>1.4.20</version>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>4.0.1</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>jakarta.servlet</groupId>
      <artifactId>jakarta.servlet-api</artifactId>
      <version>6.0.0</version>
      <scope>provided</scope>
    </dependency>
    
<!--    <dependency>-->
<!--      <groupId>javax.xml.ws</groupId>-->
<!--      <artifactId>jaxws-api</artifactId>-->
<!--      <version>2.3.1</version>-->
<!--    </dependency>-->

    <!-- https://openjdk.org/jeps/320 -->
<!--    <dependency>-->
<!--      <groupId>com.sun.xml.ws</groupId>-->
<!--      <artifactId>jaxws-ri</artifactId>-->
<!--      <version>2.3.3</version>-->
<!--      <type>pom</type>-->
<!--    </dependency>-->

<!--    <dependency>-->
<!--      <groupId>com.sun.xml.ws</groupId>-->
<!--      <artifactId>jaxws-rt</artifactId>-->
<!--      <version>2.3.3</version>-->
<!--      <type>pom</type>-->
<!--    </dependency>-->


    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-frontend-jaxws</artifactId>
      <version>3.3.5</version>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-transports-http</artifactId>
      <version>3.3.5</version>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-transports-http-jetty</artifactId>
      <version>3.3.5</version>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-frontend-jaxrs</artifactId>
      <version>3.3.5</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/com.github.ziplet/ziplet -->
    <dependency>
      <groupId>com.github.ziplet</groupId>
      <artifactId>ziplet</artifactId>
      <version>2.4.1</version>
    </dependency>

    <dependency>
      <groupId>net.sourceforge.nekohtml</groupId>
      <artifactId>nekohtml</artifactId>
      <version>1.9.22</version>
    </dependency>
    
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>${version.dependency.postgresql}</version>
    </dependency>
    
    <dependency>
      <groupId>ant-contrib</groupId>
      <artifactId>ant-contrib</artifactId>
      <version>1.0b3</version>
    </dependency>
    
    <dependency>
      <groupId>org.owasp.esapi</groupId>
      <artifactId>esapi</artifactId>
      <version>2.3.0.0</version>
    </dependency>
    
    <dependency>
      <groupId>org.dspace</groupId>
      <artifactId>xoai-common</artifactId>
      <version>${version.group.xoai}</version>
    </dependency>
    
    <dependency>
      <groupId>org.lockss</groupId>
      <artifactId>org-dspace-xoai-service-provider</artifactId>
      <version>${version.group.xoai}-p1</version>
    </dependency>
    
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcore</artifactId>
      <version>${version.dependency.httpcore}</version>
    </dependency>
    
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-all</artifactId>
      <version>${version.group.hamcrest}</version>
    </dependency>
    
    <dependency>
      <groupId>org.codehaus.woodstox</groupId>
      <artifactId>stax2-api</artifactId>
      <version>3.0.4</version>
    </dependency>

    <dependency>
      <groupId>com.lyncode</groupId>
      <artifactId>test-support</artifactId>
      <version>1.0.4</version>
    </dependency>

    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient-cache</artifactId>
      <version>${version.group.httpclient}</version>
    </dependency>

    <!-- Optional dependency of PDFBox 1.8 -->
    <dependency>
      <groupId>org.bouncycastle</groupId>
      <artifactId>bcprov-${version.group.bouncycastle.variant}</artifactId>
      <version>${version.group.bouncycastle}</version>
    </dependency>

    <dependency>
      <groupId>org.bouncycastle</groupId>
      <artifactId>bcutil-${version.group.bouncycastle.variant}</artifactId>
      <version>${version.group.bouncycastle}</version>
    </dependency>

    <dependency>
      <groupId>org.bouncycastle</groupId>
      <artifactId>bcpkix-${version.group.bouncycastle.variant}</artifactId>
      <version>${version.group.bouncycastle}</version>
    </dependency>

    <!-- Optional dependency of PDFBox 1.8 -->
    <dependency>
      <groupId>org.bouncycastle</groupId>
      <artifactId>bcmail-${version.group.bouncycastle.variant}</artifactId>
      <version>${version.group.bouncycastle}</version>
    </dependency>

    <!-- Optional dependency of PDFBox 1.8 -->
    <dependency>
      <groupId>com.ibm.icu</groupId>
      <artifactId>icu4j</artifactId>
      <version>${version.group.icu4j}</version>
    </dependency>

    <!-- Optional dependency of PDFBox 1.8 -->
    <dependency>
      <groupId>com.ibm.icu</groupId>
      <artifactId>icu4j-charset</artifactId>
      <version>${version.group.icu4j}</version>
    </dependency>

    <!-- Optional dependency of PDFBox 1.8 -->
    <dependency>
      <groupId>com.ibm.icu</groupId>
      <artifactId>icu4j-localespi</artifactId>
      <version>${version.group.icu4j}</version>
    </dependency>

    <dependency>
      <groupId>org.graalvm.polyglot</groupId>
      <artifactId>polyglot</artifactId>
      <version>${graalvm.version}</version>
    </dependency>
    <dependency>
      <groupId>org.graalvm.js</groupId>
      <artifactId>js-scriptengine</artifactId>
      <version>${graalvm.version}</version>
    </dependency>
    <!-- runtime -->
    <dependency>
      <groupId>org.graalvm.polyglot</groupId>
      <artifactId>js-community</artifactId>
      <version>${graalvm.version}</version>
      <type>pom</type>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.graalvm.polyglot</groupId>
      <artifactId>profiler-community</artifactId>
      <version>${graalvm.version}</version>
      <type>pom</type>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.graalvm.polyglot</groupId>
      <artifactId>inspect-community</artifactId>
      <version>${graalvm.version}</version>
      <type>pom</type>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>aopalliance</groupId>
      <artifactId>aopalliance</artifactId>
      <version>1.0</version>
    </dependency>

    <dependency>
      <groupId>asm</groupId>
      <artifactId>asm</artifactId>
      <version>3.3.1</version>
    </dependency>

    <dependency>
      <groupId>asm</groupId>
      <artifactId>asm-tree</artifactId>
      <version>3.3.1</version>
    </dependency>
    
<!--    <dependency>-->
<!--      <groupId>org.apache.cxf</groupId>-->
<!--      <artifactId>cxf-bundle</artifactId>-->
<!--      <version>2.7.18</version>-->
<!--    </dependency>-->

    <dependency>
      <groupId>com.sun.xml.fastinfoset</groupId>
      <artifactId>FastInfoset</artifactId>
      <version>1.2.13</version>
    </dependency>

<!--    <dependency>-->
<!--      <groupId>org.glassfish.jaxb</groupId>-->
<!--      <artifactId>jaxb-core</artifactId>-->
<!--      <version>2.2.11</version>-->
<!--    </dependency>-->

<!--    <dependency>-->
<!--      <groupId>org.glassfish.jaxb</groupId>-->
<!--      <artifactId>jaxb-runtime</artifactId>-->
<!--      <version>2.2.11</version>-->
<!--    </dependency>-->

    <dependency>
      <groupId>org.jvnet.mimepull</groupId>
      <artifactId>mimepull</artifactId>
      <version>1.9.7</version>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>2.22.0</version>
    </dependency>

    <dependency>
      <groupId>org.mock-server</groupId>
      <artifactId>mockserver-netty</artifactId>
      <version>${version.group.mockserver}</version>
      <exclusions>
        <exclusion>
          <groupId>org.bouncycastle</groupId>
          <artifactId>bcpkix-jdk15on</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.mock-server</groupId>
      <artifactId>mockserver-junit-rule</artifactId>
      <version>${version.group.mockserver}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.mysql</groupId>
      <artifactId>mysql-connector-j</artifactId>
      <version>8.0.31</version>
    </dependency>

    <dependency>
      <groupId>org.apache.neethi</groupId>
      <artifactId>neethi</artifactId>
      <version>3.0.3</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <version>${version.group.spring}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>${version.group.spring}</version>
    </dependency>
    
    <dependency>
      <groupId>org.apache.velocity</groupId>
      <artifactId>velocity</artifactId>
      <version>1.7</version>
    </dependency>

    <dependency>
      <groupId>org.netpreserve.commons</groupId>
      <artifactId>webarchive-commons</artifactId>
      <version>${version.dependency.webarchive-commons}</version>
      <exclusions>
        <exclusion>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-core</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.jwat</groupId>
      <artifactId>jwat-warc</artifactId>
      <version>1.0.0</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-csv</artifactId>
      <version>${version.dependency.commons-csv}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.solr</groupId>
      <artifactId>solr-solrj</artifactId>
      <version>${version.group.solr}</version>
    </dependency>

    <!-- Dependency of solr-test-framework -->
    <dependency>
      <groupId>org.apache.solr</groupId>
      <artifactId>solr-core</artifactId>
      <version>${version.group.solr}</version>
      <exclusions>
        <exclusion>
          <artifactId>javax.servlet</artifactId>
          <groupId>org.eclipse.jetty.orbit</groupId>
        </exclusion>
        <exclusion>
          <groupId>javax.servlet</groupId>
          <artifactId>javax.servlet-api</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.eclipse.jetty</groupId>
          <artifactId>jetty-server</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.eclipse.jetty</groupId>
          <artifactId>jetty-webapp</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- Needed for Solr testing -->
    <dependency>
      <groupId>org.apache.solr</groupId>
      <artifactId>solr-test-framework</artifactId>
      <version>${version.group.solr}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>javax.servlet</artifactId>
          <groupId>org.eclipse.jetty.orbit</groupId>
        </exclusion>
        <exclusion>
          <groupId>org.eclipse.jetty</groupId>
          <artifactId>jetty-server</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.eclipse.jetty</groupId>
          <artifactId>jetty-webapp</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.mapdb</groupId>
      <artifactId>mapdb</artifactId>
      <version>3.0.10</version>
    </dependency>

    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-util</artifactId>
      <version>9.4.49.v20220914</version>
    </dependency>

    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-io</artifactId>
      <version>9.4.49.v20220914</version>
    </dependency>

    <dependency>
    <groupId>org.eclipse.jetty</groupId>
    <artifactId>jetty-http</artifactId>
    <version>9.4.52.v20230823</version>
    </dependency>

    <dependency>
      <groupId>wsdl4j</groupId>
      <artifactId>wsdl4j</artifactId>
      <version>1.6.3</version>
    </dependency>
    
    <dependency>
      <groupId>org.apache.ws.xmlschema</groupId>
      <artifactId>xmlschema-core</artifactId>
      <version>2.2.1</version>
    </dependency>
    
    <dependency>
      <groupId>org.lockss.legacy</groupId>
      <artifactId>org-josql</artifactId>
      <version>2.2-p2</version>
    </dependency>
    
    <dependency>
      <groupId>org.lockss.legacy</groupId>
      <artifactId>com-gentlyweb-utils</artifactId>
      <version>1.1-p1</version>
    </dependency>
    
    <dependency>
      <groupId>org.opensaml</groupId>
      <artifactId>opensaml</artifactId>
      <version>2.6.4</version>
    </dependency>
    
    <dependency>
      <groupId>commons-digester</groupId>
      <artifactId>commons-digester</artifactId>
      <version>${version.dependency.commons-digester}</version>
    </dependency>
    
    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
      <version>${version.dependency.commons-fileupload}</version>
    </dependency>
    
    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
      <version>2.9.9</version>
    </dependency>
    
    <dependency>
      <groupId>org.lockss.legacy</groupId>
      <artifactId>dk-digst-oiosaml-java</artifactId>
      <version>21188-p2</version>
    </dependency>
    
    <dependency>
      <groupId>org.apache.santuario</groupId>
      <artifactId>xmlsec</artifactId>
      <version>2.1.7</version>
    </dependency>
    
    <dependency>
      <groupId>org.fishwife</groupId>
      <artifactId>jrugged-core</artifactId>
      <version>3.2.2</version>
    </dependency>

    <dependency>
      <groupId>org.opensaml</groupId>
      <artifactId>xmltooling</artifactId>
      <version>1.4.4</version>
    </dependency>

    <dependency>
      <groupId>oro</groupId>
      <artifactId>oro</artifactId>
      <version>2.0.8</version>
    </dependency>

    <dependency>
      <groupId>org.lockss.legacy</groupId>
      <artifactId>org-mortbay-jetty</artifactId>
      <version>5.1.5-p4</version>
    </dependency>

    <dependency>
      <groupId>com.jcabi</groupId>
      <artifactId>jcabi-aspects</artifactId>
      <version>0.22.6</version>
    </dependency>

    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjrt</artifactId>
      <version>1.8.10</version>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.httpunit</groupId>
      <artifactId>httpunit</artifactId>
      <version>1.7.3</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>javax.servlet</groupId>
          <artifactId>javax.servlet-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>xmlunit</groupId>
      <artifactId>xmlunit</artifactId>
      <version>${version.dependency.xmlunit}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>it.unimi.dsi</groupId>
      <artifactId>fastutil</artifactId>
      <version>6.3</version>
    </dependency>

    <dependency>
      <groupId>org.lockss.legacy</groupId>
      <artifactId>org-netpreserve-commons-webarchive-commons</artifactId>
      <version>1.1.7-p2</version>
    </dependency>

    <!-- Because webarchive-commons 1.1.7-p1 doesn't bring in json; 1.1.8 (brought by the repo core) does but is preempted -->
    <dependency>
      <groupId>org.json</groupId>
      <artifactId>json</artifactId>
      <version>20140107</version>
    </dependency>

    <dependency>
      <groupId>org.apache.activemq</groupId>
      <artifactId>activemq-client</artifactId>
      <version>${version.group.activemq}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.activemq</groupId>
      <artifactId>activemq-broker</artifactId>
      <version>${version.group.activemq}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.activemq</groupId>
      <artifactId>activemq-kahadb-store</artifactId>
      <version>${version.group.activemq}</version>
      <scope>test</scope>
    </dependency>
    
    <dependency>
      <groupId>net.sourceforge.schemaspy</groupId>
      <artifactId>schemaspy</artifactId>
      <version>5.0.0</version>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>${version.group.jackson}</version>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${version.dependency.jackson-databind}</version>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-yaml</artifactId>
      <version>${version.group.jackson}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.skyscreamer</groupId>
      <artifactId>jsonassert</artifactId>
      <version>${version.dependency.jsonassert}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>com.vaadin.external.google</groupId>
          <artifactId>android-json</artifactId>
        </exclusion>
      </exclusions> 
    </dependency>

    <dependency>
      <groupId>org.marc4j</groupId>
      <artifactId>marc4j</artifactId>
      <version>${version.dependency.marc4j}</version>
    </dependency>

    <dependency>
      <groupId>com.tectonica</groupId>
      <artifactId>jonix</artifactId>
      <version>${version.dependency.jonix}</version>
    </dependency>
    
    <!-- Lists jackson-annotations as a dependency of scope 'provided' -->
    <!-- which is already an explicit dependency of jackson-databind -->
    <dependency>
      <groupId>org.jbibtex</groupId>
      <artifactId>jbibtex</artifactId>
      <version>${version.dependency.jbibtex}</version>
    </dependency>

    <dependency>
      <groupId>com.jayway.jsonpath</groupId>
      <artifactId>json-path</artifactId>
      <version>${version.dependency.json-path}</version>
      <!-- Configured in MiscSetupManager for Jackson, not default json-smart -->
      <exclusions>
        <exclusion>
          <groupId>net.minidev</groupId>
          <artifactId>json-smart</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.apache.lucene</groupId>
      <artifactId>lucene-analyzers-common</artifactId>
      <version>8.9.0</version>
    </dependency>

    <dependency>
      <groupId>org.apache.pdfbox</groupId>
      <artifactId>pdfbox</artifactId>
      <version>${version.group.pdfbox}</version>
    </dependency>

    <dependency>
      <groupId>org.lockss</groupId>
      <artifactId>pdfbox</artifactId>
      <version>0.7.3-p1</version>
      <exclusions>
        <exclusion>
          <groupId>bouncycastle</groupId>
          <artifactId>bcprov-jdk14</artifactId>
        </exclusion>
        <exclusion>
          <groupId>bouncycastle</groupId>
          <artifactId>bcmail-jdk14</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>io.zonky.test</groupId>
      <artifactId>embedded-postgres</artifactId>
      <version>2.0.6</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>

    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>${version.plugin.maven-antrun-plugin}</version>
        <dependencies>
          <dependency>
            <groupId>ant-contrib</groupId>
            <artifactId>ant-contrib</artifactId>
            <version>${version.dependency.ant-contrib}</version>
          </dependency>
        </dependencies>
        <executions>
        
          <!-- Copy lockss-testing.keystore to lockss-testing.keystore
               and add to it the cert for the "develop" key used to
               sign plugins with the insecure built-in keystore -->

          <execution>
            <id>build-testing-keystore</id>
            <phase>process-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <copy file="${basedir}/src/main/java/org/lockss/plugin/lockss.keystore"
                      tofile="${basedir}/target/classes/org/lockss/plugin/lockss-testing.keystore"
                      overwrite="true"
                      failonerror="true"/>
                <exec executable="keytool" dir="${basedir}" failonerror="true" >
                  <arg value="-importkeystore"/>
                  <arg value="-srckeystore"/>
                  <arg value="${basedir}/src/main/java/org/lockss/plugin/developcert.keystore"/>
                  <arg value="-destkeystore"/>
                  <arg value="${basedir}/target/classes/org/lockss/plugin/lockss-testing.keystore"/>
                  <arg value="-srcalias"/>
                  <arg value="develop"/>
                  <arg value="-srcstorepass"/>
                  <arg value="password"/>
                  <arg value="-deststorepass"/>
                  <arg value="password"/>
                </exec>
              </target>
            </configuration>
          </execution>

          <execution>
            <id>paramDoclet</id>
            <phase>package</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <skip>${build.java.jarMainJavadoc.skip}</skip>
              <target>
                <mkdir dir="${dir.apidocs}" />
                <javadoc sourcepath="${project.build.sourceDirectory}"
                         doclet="org.lockss.doclet.ParamDoclet"
                         docletpathref="maven.test.classpath"
                         classpathref="maven.test.classpath"
                         packagenames="org.lockss.*"
                         access="private"
                         failonerror="true">
                  <arg value="-f"/> <arg value="Alpha"/>
                  <arg value="-d"/> <arg value="${dir.apidocs}"/>
                  <arg value="-o"/> <arg value="paramdoc.html"/>
                  <arg value="-h"/> <arg value="Release&amp;nbsp;${build.releasename} Built&amp;nbsp;${local.build.timestamp} on&amp;nbsp;${hostname}"/>
                </javadoc>
              </target>
            </configuration>
          </execution>

          <execution>
            <id>paramList</id>
            <phase>package</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <skip>${build.java.jarMainJavadoc.skip}</skip>
              <target>
                <mkdir dir="${dir.apidocs}" />
		<java classname="ParamDoc" fork="true" >
		  <classpath refid="maven.test.classpath" />
		  <!-- Loading LockssOiosamlSpFilter causes errors in this
		       context for some reason - exclude it -->
		  <arg line="-o ${dir.apidocs}/paramdoc.txt ${project.build.directory}/current.jar -x org.lockss.servlet.LockssOiosamlSpFilter" />
   		  <sysproperty key="org.lockss.defaultLogLevel"
			       value="${loglevel.tool}" />
   		</java>
              </target>
            </configuration>
          </execution>

	  <!-- If there isn't already an up-to-date archive of an
	       initialized, empty metadata database, create one and zip it.
	       Used by LockssTestCase[4] to reduce Derby start time for
	       tests. -->
          <execution>
            <id>emptyDbArchive</id>
            <phase>process-test-classes</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <taskdef resource="net/sf/antcontrib/antcontrib.properties" />
		<property name="empty.db.archive"
			  value="${project.build.outputDirectory}/org/lockss/db/db.zip" />
		<uptodate property="archive.db.is.up.to.date"
			  srcfile="${project.build.outputDirectory}/org/lockss/metadata/MetadataDbManagerSql.class"
			  targetfile="${empty.db.archive}" />
		<if>
		  <isset property="archive.db.is.up.to.date" />
		  <else>
		    <echo level="info" message="Generating empty DB for tests" />
                    <tempfile property="empty.db.parent.dir"
                              destDir="${tmpdir}"
                              prefix="testtmp"/>
		    <property name="empty.db.dir"
			      value="${empty.db.parent.dir}/db" />
		    <java classname="org.lockss.metadata.EmptyDbCreator"
			  fork="true">
   		      <classpath refid="maven.test.classpath" />
		      <arg line="-d ${empty.db.parent.dir}" />
		      <sysproperty key="org.lockss.defaultLogLevel"
				   value="${loglevel.tool}" />
		    </java>
		    <zip destfile="${empty.db.archive}"
			 basedir="${empty.db.dir}" />
		    <delete dir="${empty.db.parent.dir}" quiet="true" />
		  </else>
		</if>
	      </target>
            </configuration>
          </execution>

          <execution>
            <id>dbSchema</id>
            <phase>package</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <skip>${build.java.jarMainJavadoc.skip}</skip>
              <target>
                <tempfile property="empty.db.parent.dir"
                          destDir="${tmpdir}"
                          prefix="schematmp"/>
		<property name="empty.db.dir"
			  value="${empty.db.parent.dir}/db" />
                <mkdir dir="${dir.apidocs}/schemadoc" />
   		<java classname="org.lockss.metadata.EmptyDbCreator"
		      fork="true">
   		  <classpath refid="maven.test.classpath" />
   		  <arg line="-d ${empty.db.parent.dir}" />
   		  <sysproperty key="org.lockss.defaultLogLevel"
			       value="${loglevel.tool}" />
   		</java>

		<java classname="net.sourceforge.schemaspy.Main"
		      failonerror="true"
		      fork="true"
		      dir="${empty.db.dir}">
   		  <classpath refid="maven.test.classpath" />
		  <arg line="-t derby -db LockssMetadataDbManager -dp derbynet-${version.group.derby}.jar -hq -noads -norows -u LOCKSS -o ${dir.apidocs}/schemadoc" />
		  <sysproperty key="org.lockss.defaultLogLevel"
			       value="${loglevel.tool}"/>
		</java>
		<delete dir="${empty.db.parent.dir}" quiet="true" />
              </target>
            </configuration>
          </execution>

          <execution>
            <id>v3StateDiag</id>
            <phase>package</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
	      <!-- failonerror doesn't seem to work, trycatch requires
	           ant-contrib, rely on prop for now -->
              <skip>${build.java.jarMainJavadoc.skip}</skip>
              <target>
                <taskdef resource="net/sf/antcontrib/antcontrib.properties" />
		<property name="dir.states" value="${dir.apidocs}" />
                <mkdir dir="${dir.states}" />

		<!-- Generate .dot from state machine definition -->
		<java classname="org.lockss.doclet.PsmToDot" fork="true">
   		  <classpath refid="maven.test.classpath" />
		  <arg line="-m org.lockss.poller.v3.PollerStateMachineFactory -l Poller -a org.lockss.poller.v3.PollerActions -m org.lockss.poller.v3.VoterStateMachineFactory -l Voter -a org.lockss.poller.v3.VoterActions -o ${dir.states}/states.dot" />
		  <sysproperty key="org.lockss.defaultLogLevel" value="${loglevel.tool}"/>
		</java>

		<trycatch property="dotfail">
		  <try>
		    <!-- Generate .png from .dot -->
		    <apply executable="dot" dir="${basedir}"
			   dest="${dir.states}"
			   failifexecutionfails="false"
			   failonerror="false" >
		      <arg value="-Tpng"/> <arg value="-o"/> <targetfile/> <srcfile/>
		      <fileset dir="${dir.states}" includes="**/*.dot"/>
		      <mapper type="glob" from="*.dot" to="*.png"/>
		    </apply>
		    <!-- Generate .ps from .dot -->
		    <apply executable="dot" dir="${basedir}"
			   dest="${dir.states}"
			   failifexecutionfails="false" >
		      <arg value="-Tps2"/> <arg value="-o"/> <targetfile/> <srcfile/>
		      <fileset dir="${dir.states}" includes="**/*.dot"/>
		      <mapper type="glob" from="*.dot" to="*.ps"/>
		    </apply>
		    <!-- Generate .pdf from .ps -->
		    <apply executable="ps2pdf" dir="${basedir}"
			   dest="${dir.states}"
			   failifexecutionfails="false" >
		      <srcfile/> <targetfile/>
		      <fileset dir="${dir.states}" includes="**/*.ps"/>
		      <mapper type="glob" from="*.ps" to="*.pdf"/>
		    </apply>
		  </try>
		  <catch>
		    <echo message="dot or ps2pdf failed, continuing" />
		  </catch>
		</trycatch>
              </target>
            </configuration>
          </execution>

        </executions>
      </plugin>
      
      <!-- BEGIN plugin lockss-tdbxml-maven-plugin -->
      
      <plugin>
        <groupId>org.lockss.laaws</groupId>
        <artifactId>lockss-tdbxml-maven-plugin</artifactId>
        <version>${version.lockss.lockss-tdbxml-maven-plugin}</version>
        <executions>
          
          <!-- BEGIN step processTdb -->

          <execution>
            <id>processTdb</id>
            <phase>test-compile</phase>
            <goals>
              <goal>tdbxml</goal>
            </goals>
            <configuration>
              <skip>${build.java.runTests.skip}</skip>
              <srcDir>${project.build.testSourceDirectory}</srcDir>
              <dstDir>${project.build.testOutputDirectory}</dstDir>
              <recurse>true</recurse>
            </configuration>
          </execution>
          
          <!-- END step processTdb -->

        </executions>
      </plugin>
      
      <!-- END plugin lockss-tdbxml-maven-plugin -->
      
      <!-- BEGIN plugin exec-maven-plugin -->
      
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>${version.plugin.exec-maven-plugin}</version>
        <executions>

          <!-- BEGIN step runStf -->

          <execution>
            <id>runStf</id>
            <phase>integration-test</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <skip>${build.java.runStf.skip}</skip>
              <workingDirectory>test/frameworks/run_stf</workingDirectory>
              <executable>python2</executable>
              <arguments>
                <argument>testsuite.py</argument>
                <argument>${build.java.runStf.suite}</argument>
              </arguments>
            </configuration>
          </execution>

          <!-- END step runStf -->

          <!-- BEGIN step package-test-plugins -->

	  <!-- Package a test plugin that contains a lib jar, for
	       TestPluginManager -->
          <execution>
            <id>package-test-plugins-1</id>
            <phase>process-test-classes</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <skip>${skipBuildTdb}</skip>
              <executable>java</executable>
	      <classpathScope>test</classpathScope>
	      <!-- Workaround for exec-maven-plugin bug that causes error
	           with -p argument -->
	      <longModulepath>false</longModulepath>

              <arguments>
		<argument>-classpath</argument>
		<classpath/>
                <argument>-Dpolyglot.engine.WarnInterpreterOnly=false</argument>
                <argument>-Dorg.lockss.defaultLogLevel=${loglevel.tool}</argument>
                <argument>org.lockss.util.PluginPackager</argument>
                <argument>-p</argument>
                <argument>org.lockss.plugin.plugtest1.PlugTest1Plugin</argument>
                <argument>-o</argument>
                <argument>${basedir}/target/test-classes/org/lockss/test/plugin-with-libs.jar</argument>
                <argument></argument>
                <argument>-keystore</argument>
                <argument>${basedir}/src/test/java/org/lockss/test/goodguy.keystore</argument>
                <argument>-alias</argument>
                <argument>goodguy</argument>
                <argument>-storepass</argument>
                <argument>f00bar</argument>
                <argument>-keypass</argument>
                <argument>f00bar</argument>

              </arguments>
            </configuration>
          </execution>

	  <!-- This is identical except that the lib jar is exploded -->
          <execution>
            <id>package-test-plugins-2</id>
            <phase>process-test-classes</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <skip>${skipBuildTdb}</skip>
              <executable>java</executable>
	      <classpathScope>test</classpathScope>
	      <!-- Workaround for exec-maven-plugin bug that causes error
	           with -p argument -->
	      <longModulepath>false</longModulepath>

              <arguments>
		<argument>-classpath</argument>
		<classpath/>
                <argument>-Dorg.lockss.defaultLogLevel=${loglevel.tool}</argument>
                <argument>-Dpolyglot.engine.WarnInterpreterOnly=false</argument>
                <argument>org.lockss.util.PluginPackager</argument>
                <argument>-p</argument>
                <argument>org.lockss.plugin.plugtest1.PlugTest1Plugin</argument>
                <argument>-o</argument>
                <argument>${basedir}/target/test-classes/org/lockss/test/plugin-with-exploded-libs.jar</argument>
                <argument>-explodelib</argument>
                <argument>-keystore</argument>
                <argument>${basedir}/src/test/java/org/lockss/test/goodguy.keystore</argument>
                <argument>-alias</argument>
                <argument>goodguy</argument>
                <argument>-storepass</argument>
                <argument>f00bar</argument>
                <argument>-keypass</argument>
                <argument>f00bar</argument>

              </arguments>
            </configuration>
          </execution>

          <!-- END step package-test-plugins -->

          <execution>
            <id>generatePrebakedSolrHomeFilelist</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <!-- Working directory set to the source copy of the Solr home base directory used for tests -->
              <workingDirectory>${project.basedir}/src/test/resources/solr</workingDirectory>
              <executable>${project.basedir}/scripts/generateFilelist.sh</executable>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- END plugin exec-maven-plugin -->
    </plugins>

    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
      <resource>
        <directory>src/main/java</directory>
        <includes>
          <include>**/*.xml</include>   <!-- mapping files in various dirs -->
          <include>**/*.dtd</include>
          <include>**/*.props</include>
          <include>**/*.keystore</include>
          <include>**/errorpagetemplate.html</include>
          <include>**/urlrewriter.js</include> <!-- IA/WERA javascript -->
        </includes>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
      </testResource>
      <testResource>
      <directory>src/test/java</directory>
      <excludes>
        <exclude>**/*.java</exclude>
        <exclude>**/*.tdb</exclude>
      </excludes>
      </testResource>
    </testResources>
    
  </build>

</project>
